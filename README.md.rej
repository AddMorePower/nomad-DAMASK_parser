diff a/README.md b/README.md	(rejected hunks)
@@ -1,81 +1,92 @@
-# nomad-DAMASK_parser
+# DAMASK_parser
 
 A parser plugin for the DAMASK output files
 
-----
+This `nomad` plugin was generated with `Cookiecutter` along with `@nomad`'s [`cookiecutter-nomad-plugin`](https://github.com/FAIRmat-NFDI/cookiecutter-nomad-plugin) template.
 
-This `nomad`_ plugin was generated with `Cookiecutter`_ along with `@nomad`_'s `cookiecutter-nomad-plugin`_ template.
+## Development
 
+If you want to develop locally this plugin, clone the project and in the plugin folder, create a virtual environment (you can use Python 3.10, 3.11 or 3.12):
+```sh
+git clone https://github.com/AddMorePower/DAMASK_parser.git
+cd DAMASK_parser
+python3.11 -m venv .pyenv
+. .pyenv/bin/activate
+```
 
-### Install
-
-You should create a virtual environment. You will need the `nomad-lab` package (and `pytest`).
-We recommend using Python 3.9.
-
+Make sure to have `pip` upgraded:
 ```sh
-python3 -m venv .pyenv
-source .pyenv/bin/activate
 pip install --upgrade pip
-pip install -e '.[dev]' --index-url https://gitlab.mpcdf.mpg.de/api/v4/projects/2187/packages/pypi/simple
 ```
 
-**Note!**
-Until we have an official pypi NOMAD release with the plugins functionality. Make
-sure to include NOMAD's internal package registry (e.g. via `--index-url`).
-
-### Testing
-
-You can run automated tests with `pytest`:
-
+We recommend installing `uv` for fast pip installation of the packages:
 ```sh
-pytest -svx tests
+pip install uv
 ```
 
-### Run linting
-
+Install the `nomad-lab` package:
 ```sh
-ruff check .
+uv pip install -e '.[dev]'
 ```
 
-### Run auto-formatting
-
-This is entirely optional. To add this as a check in github actions pipeline, uncomment the `ruff-formatting` step in `./github/workflows/actions.yaml`.
+### Run the tests
 
+You can run locally the tests:
 ```sh
-ruff format .
+python -m pytest -sv tests
 ```
 
-### Developing a NOMAD plugin
-
-Follow the [guide](https://nomad-lab.eu/prod/v1/staging/docs/howto/plugins/plugins.html) on how to develop NOMAD plugins.
+where the `-s` and `-v` options toggle the output verbosity.
 
-### Build the python package
-
-The `pyproject.toml` file contains everything that is necessary to turn the project
-into a pip installable python package. Run the python build tool to create a package distribution:
-
-```
-pip install build
-python -m build --sdist
+Our CI/CD pipeline produces a more comprehensive test report using the `pytest-cov` package. You can generate a local coverage report:
+```sh
+uv pip install pytest-cov
+python -m pytest --cov=src tests
 ```
 
-You can install the package with pip:
+### Run linting and auto-formatting
 
-```
-pip install dist/nomad-DAMASK_parser-0.1.0
+We use [Ruff](https://docs.astral.sh/ruff/) for linting and formatting the code. Ruff auto-formatting is also a part of the GitHub workflow actions. You can run locally:
+```sh
+ruff check .
+ruff format . --check
 ```
 
-Read more about python packages, `pyproject.toml`, and how to upload packages to PyPI
-on the [PyPI documentation](https://packaging.python.org/en/latest/tutorials/packaging-projects/).
+### Debugging
+
+For interactive debugging of the tests, use `pytest` with the `--pdb` flag. We recommend using an IDE for debugging, e.g., _VSCode_. If that is the case, add the following snippet to your `.vscode/launch.json`:
+```json
+{
+  "configurations": [
+      {
+        "name": "<descriptive tag>",
+        "type": "debugpy",
+        "request": "launch",
+        "cwd": "${workspaceFolder}",
+        "program": "${workspaceFolder}/.pyenv/bin/pytest",
+        "justMyCode": true,
+        "env": {
+            "_PYTEST_RAISE": "1"
+        },
+        "args": [
+            "-sv",
+            "--pdb",
+            "<path-to-plugin-tests>",
+        ]
+    }
+  ]
+}
+```
 
-### Documentation on Github pages
+where `<path-to-plugin-tests>` must be changed to the local path to the test module to be debugged.
 
-To deploy documentation on Github pages, make sure to [enable GitHub pages via the repo settings](https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#publishing-from-a-branch). 
+The settings configuration file `.vscode/settings.json` automatically applies the linting and formatting upon saving the modified file.
 
-To view the documentation locally, install the documentation related packages using:
+### Documentation on Github pages
 
+To view the documentation locally, install the related packages using:
 ```sh
-pip install -r requirements_docs.txt
+uv pip install -r requirements_docs.txt
 ```
 
 Run the documentation server:
@@ -83,11 +94,25 @@ Run the documentation server:
 mkdocs serve
 ```
 
-### Template update
+## Adding this plugin to NOMAD
+
+Currently, NOMAD has two distinct flavors that are relevant depending on your role as an user:
+1. [A NOMAD Oasis](#adding-this-plugin-in-your-nomad-oasis): any user with a NOMAD Oasis instance.
+2. [Local NOMAD installation and the source code of NOMAD](#adding-this-plugin-in-your-local-nomad-installation-and-the-source-code-of-nomad): internal developers.
+
+### Adding this plugin in your NOMAD Oasis
+
+Read the [NOMAD plugin documentation](https://nomad-lab.eu/prod/v1/staging/docs/howto/oasis/plugins_install.html) for all details on how to deploy the plugin on your NOMAD instance.
 
-We use cruft to update the project based on template changes. A `cruft-update.yml` is included in Github workflows to automatically check for updates and create pull requests to apply updates. Follow the [instructions](https://github.blog/changelog/2022-05-03-github-actions-prevent-github-actions-from-creating-and-approving-pull-requests/) on how to enable Github Actions to create pull requests. 
+### Adding this plugin in your local NOMAD installation and the source code of NOMAD
+
+We now recommend using the dedicated [`nomad-distro-dev`](https://github.com/FAIRmat-NFDI/nomad-distro-dev) repository to simplify the process. Please refer to that repository for detailed instructions.
+
+### Template update
 
-To run the check for updates locally, follow the instructions on [`cruft` website](https://cruft.github.io/cruft/#updating-a-project).
+We use [`cruft`](https://github.com/cruft/cruft) to update the project based on template changes. To run the check for updates locally, run `cruft update` in the root of the project. More details see the instructions on [`cruft` website](https://cruft.github.io/cruft/#updating-a-project).
 
-### License
-Distributed under the terms of the `MIT`_ license, "nomad-DAMASK_parser" is free and open source software
+## Main contributors
+| Name | E-mail     |
+|------|------------|
+| Guillaume Gaisn√© | [guillaume.gaisne@esrf.fr](mailto:guillaume.gaisne@esrf.fr)
